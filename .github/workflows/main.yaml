name: Release application

on:
  push:

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: dwk-cluster
  GKE_ZONE: europe-north1-b
  REGISTRY: europe-north1-docker.pkg.dev
  REPOSITORY: my-repository
  IMAGE_DIR1: todo-app
  IMAGE_DIR2: todo-backend
  SERVICE_DIR1: todo-list-app
  STSET_PSQL: postgres-stset
  BRANCH: ${{ github.ref_name }}

jobs:
  build-publish-deploy:
    name: Build, Publish and Deploy
    runs-on: ubuntu-latest
    environment: project-env-1

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Check multiline secret
        run: echo "${{ secrets.GKE_SA_KEY }}" | head -n 3 || echo "GKE_SA_KEY not available"

      - name: Confirm if GKE_SA_KEY secret is available
        run: |
          if [ -z "${{ secrets.GKE_SA_KEY }}" ]; then
            echo "GKE_SA_KEY is NOT set or accessible"
            exit 1
          else
            echo "GKE_SA_KEY is injected"
          fi

      - name: Confirm if GKE_PROJECT secret is available
        run: |
          if [ -z "${{ secrets.GKE_PROJECT }}" ]; then
            echo "GKE_PROJECT is NOT set or accessible"
            exit 1
          else
            echo "GKE_PROJECT is injected"
          fi

      - uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GKE_SA_KEY }}

      - name: 'Set up Cloud SDK'
        uses: google-github-actions/setup-gcloud@v2

      - name: 'Use gcloud CLI'
        run: gcloud info

      - run: gcloud --quiet auth configure-docker "$REGISTRY"

      - name: 'Get GKE credentials'
        uses: 'google-github-actions/get-gke-credentials@v2'
        with:
          cluster_name: '${{ env.GKE_CLUSTER }}'
          project_id: '${{ env.PROJECT_ID }}'
          location: '${{ env.GKE_ZONE }}'

      - name: 'Form the image name for todo-app'
        run: echo "IMAGE_TAG_DIR1=$REGISTRY/$PROJECT_ID/$REPOSITORY/$IMAGE_DIR1:$BRANCH-$GITHUB_SHA" >> $GITHUB_ENV

      - name: Build todo-app image
        run: docker build --tag $IMAGE_TAG_DIR1 todo-app/

      - name: Publish todo-app image
        run: docker push $IMAGE_TAG_DIR1

      - name: 'Form the image name for todo-backend'
        run: echo "IMAGE_TAG_DIR2=$REGISTRY/$PROJECT_ID/$REPOSITORY/$IMAGE_DIR2:$BRANCH-$GITHUB_SHA" >> $GITHUB_ENV

      - name: Build todo-backend image
        run: docker build --tag $IMAGE_TAG_DIR2 todo-backend/

      - name: Publish todo-backend image
        run: docker push $IMAGE_TAG_DIR2

      # Deploy step
      - name: Set up Kustomize
        uses: imranismail/setup-kustomize@v2.1.0

      - name: Account for namespace and Kustomization path
        run: |
          echo ${{ github.event_name }}
          echo ${{ github.ref }}

          if [[ ${{ github.ref }} == refs/heads/main ]]; then
            kubectl get namespace staging >/dev/null 2>&1 || kubectl create namespace staging
            echo "PATH_TO_KYAML=base/overlays/staging/kustomization.yaml" >> $GITHUB_ENV
          else
            if [[ ${{ github.ref }} == refs/tags* ]]; then
              kubectl get namespace production >/dev/null 2>&1 || kubectl create namespace production
              echo "PATH_TO_KYAML=base/overlays/prod/kustomization.yaml" >> $GITHUB_ENV
            else
              echo "Something went wrong with branch vs tag"
              exit 1
            fi
          fi

      - name: Set correct image names to correct dir
        run: |-
          cd base/
          kustomize edit set image PROJECT/IMAGE_DIR1=$IMAGE_TAG_DIR1
          kustomize edit set image PROJECT/IMAGE_DIR2=$IMAGE_TAG_DIR2
          
      - name: commit kustomization.yaml to GitHub
        uses: EndBug/add-and-commit@v9
        with:
          add: ${{ env.PATH_TO_KYAML }}
          message: New version released ${{ github.sha }}